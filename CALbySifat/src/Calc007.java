import java.math.*;
/**
     * This is a Simple Scientific Calculator for My java Project.
     * by_
     * Sifat Ahmad 
     * ID: 142311007
     * Department of CSE , Varendra University,Rajshahi,Bangladesh .
     
     */
public class Calc007 extends javax.swing.JFrame {

    private boolean zerodisp;
    private boolean decdisp;
    private boolean dgrrad;
    private byte op;
    private boolean shft;
    private double ina;
    private double inb;
    private double out;
    
    public Calc007() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        display1 = new javax.swing.JTextField();
        display2 = new javax.swing.JTextField();
        one = new javax.swing.JButton();
        five = new javax.swing.JButton();
        two = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        point = new javax.swing.JButton();
        six = new javax.swing.JButton();
        four = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        mul = new javax.swing.JButton();
        div = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        sqr = new javax.swing.JButton();
        three = new javax.swing.JButton();
        del = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        exp = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        onebx = new javax.swing.JButton();
        f = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        deg = new javax.swing.JRadioButton();
        rad = new javax.swing.JRadioButton();
        reset = new javax.swing.JButton();
        sqrt = new javax.swing.JButton();
        cuberoot = new javax.swing.JButton();
        cube1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("    Scientific Calculator © Sifat Ahmad ");

        display1.setBackground(new java.awt.Color(0, 0, 0));
        display1.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        display1.setForeground(new java.awt.Color(255, 255, 255));
        display1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        display1.setFocusable(false);
        display1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display1ActionPerformed(evt);
            }
        });

        display2.setBackground(new java.awt.Color(0, 0, 0));
        display2.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        display2.setForeground(new java.awt.Color(255, 255, 255));
        display2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        display2.setFocusable(false);

        one.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        one.setText("1");
        one.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        five.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        five.setText("5");
        five.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        two.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        two.setText("2");
        two.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        zero.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        zero.setText("0");
        zero.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        point.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        point.setText(".");
        point.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        point.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointActionPerformed(evt);
            }
        });

        six.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        six.setText("6");
        six.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        four.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        four.setText("4");
        four.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        seven.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        seven.setText("7");
        seven.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        eight.setText("8");
        eight.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        nine.setText("9");
        nine.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        plus.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        plus.setText("+");
        plus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        minus.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        minus.setText("-");
        minus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        mul.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        mul.setText("×");
        mul.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulActionPerformed(evt);
            }
        });

        div.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        div.setText("÷");
        div.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        div.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divActionPerformed(evt);
            }
        });

        equal.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        equal.setText("=");
        equal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        sqr.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sqr.setText("x²");
        sqr.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sqr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrActionPerformed(evt);
            }
        });

        three.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        three.setText("3");
        three.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        del.setBackground(new java.awt.Color(255, 153, 153));
        del.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        del.setText("Del");
        del.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        cos.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        cos.setText("cos");
        cos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });

        tan.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        tan.setText("tan");
        tan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });

        exp.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        exp.setText("e");
        exp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expActionPerformed(evt);
            }
        });

        percent.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        percent.setText("%");
        percent.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        percent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentActionPerformed(evt);
            }
        });

        pi.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        pi.setText("π");
        pi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piActionPerformed(evt);
            }
        });

        onebx.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        onebx.setText("1/x");
        onebx.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        onebx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onebxActionPerformed(evt);
            }
        });

        f.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        f.setText("Shift");
        f.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        f.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fMouseClicked(evt);
            }
        });
        f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fActionPerformed(evt);
            }
        });

        sin.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        sin.setText("sin");
        sin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });

        buttonGroup1.add(deg);
        deg.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        deg.setText("Degree");
        deg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degActionPerformed(evt);
            }
        });

        buttonGroup1.add(rad);
        rad.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        rad.setText("Radian");
        rad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(255, 51, 51));
        reset.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("Reset");
        reset.setBorder(null);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        sqrt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sqrt.setText("√x");
        sqrt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtActionPerformed(evt);
            }
        });

        cuberoot.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cuberoot.setText("3√x");
        cuberoot.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cuberoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuberootActionPerformed(evt);
            }
        });

        cube1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cube1.setText("x³");
        cube1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cube1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cube1ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextField1.setText("© Sifat Ahmad 2015");
        jTextField1.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(display1)
                    .addComponent(display2)
                    .addComponent(deg)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(zero, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(one, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(four, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(seven, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(percent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sqr, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(mul, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(div, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(pi, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cos, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                                    .addComponent(onebx, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tan, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(rad)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cube1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cuberoot, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(exp, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(f, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(reset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(display1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(display2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deg)
                    .addComponent(rad)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuberoot)
                    .addComponent(cube1)
                    .addComponent(f)
                    .addComponent(onebx)
                    .addComponent(percent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sin)
                    .addComponent(cos)
                    .addComponent(tan)
                    .addComponent(exp)
                    .addComponent(sqrt))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mul, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(div, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sqr, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pi, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void display1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_display1ActionPerformed

    private void piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piActionPerformed
      display1.setText("pi");
        display2.setText(String.valueOf(Math.PI));
      
    }//GEN-LAST:event_piActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
         if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "8");
        zerodisp= true;
    }//GEN-LAST:event_eightActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
       if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "1");
        zerodisp= true;
    }//GEN-LAST:event_oneActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "0");
        //zerodisp= true;
    }//GEN-LAST:event_zeroActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
          if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "9");
        zerodisp= true;
    }//GEN-LAST:event_nineActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "6");
        zerodisp= true;
    }//GEN-LAST:event_sixActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "5");
        zerodisp= true;
    }//GEN-LAST:event_fiveActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
         if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "2");
        zerodisp= true;
    }//GEN-LAST:event_twoActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
          if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "7");
        zerodisp= true;
    }//GEN-LAST:event_sevenActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
       if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "4");
        zerodisp= true;
    }//GEN-LAST:event_fourActionPerformed

    private void pointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointActionPerformed
       if ( !decdisp)
        
        display2.setText(display2.getText() + ".");
        decdisp= true;
    }//GEN-LAST:event_pointActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display2.setText(display2.getText() + "3");
        zerodisp= true;
    }//GEN-LAST:event_threeActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        display2.setText("0");
        zerodisp=false;
        decdisp=false;
    }//GEN-LAST:event_delActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        display2.setText("0");
        display1.setText(null);
        zerodisp=false;
        decdisp=false;
        ina=0;
        inb=0;
        out=0;
    }//GEN-LAST:event_resetActionPerformed

    private void onebxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onebxActionPerformed
       inb=Double.parseDouble(String.valueOf(display2.getText()));
       out=1/inb;
       display2.setText(String.valueOf(out));
       display1.setText("1/" +String.valueOf(inb));
       op=0;
       
    }//GEN-LAST:event_onebxActionPerformed
/*
    private void sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtActionPerformed
        inb=Double.parseDouble(String.valueOf(display2.getText()));
        out=Math.sqrt(inb);
        display2.setText(String.valueOf(out));
        display1.setText(  "y" +String.valueOf(inb));
    }//GEN-LAST:event_sqrtActionPerformed
*/
    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
     inb=Double.parseDouble(String.valueOf(display2.getText()));
     if(!shft){
         if(!dgrrad){
             display1.setText(" sin ( " +String.valueOf(inb) +" )");
              
            
         inb = inb*0.0174533;
         }
         out=Math.sin(inb);   
     }
          else{
                   display1.setText(" sinh ( " +String.valueOf(inb) +" )");     
         out=Math.sinh(inb);
         
                  }
       display2.setText(String.valueOf(out));
       out=0;
       op=0;
    }//GEN-LAST:event_sinActionPerformed
       
     
    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
     inb=Double.parseDouble(String.valueOf(display2.getText()));
     if(!shft)
        {
         if(!dgrrad)
             display1.setText(" cos ( " +String.valueOf(inb) +" )");
             inb = inb*0.01745; 
             out=Math.cos(inb);
             display2.setText(String.valueOf(out));
            
         }
          
          else
       { 
         display1.setText(" cosh ( " +String.valueOf(inb) +" )");     
         out=Math.cosh(inb);
         display2.setText(String.valueOf(out));
         }
       out=0;
       op=0;
    }//GEN-LAST:event_cosActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
       inb=Double.parseDouble(String.valueOf(display2.getText()));
     if(!shft)
        {
         if(!dgrrad)
             display1.setText(" tan ( " +String.valueOf(inb) +" )");
             inb = inb*0.0174533; 
             out=Math.tan(inb);
             
             display2.setText(String.valueOf(out));
         }
          
    else
       { 
         display1.setText(" tannh ( " +String.valueOf(inb) +" )");     
         out=Math.tanh(inb);
         display2.setText(String.valueOf(out));
         }
       out=0;
       op=0;
    }//GEN-LAST:event_tanActionPerformed

    private void sqrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrActionPerformed
        inb=Double.parseDouble(String.valueOf(display2.getText()));
        out=inb*inb ;
        display2.setText(String.valueOf(out));
        display1.setText(String.valueOf(inb) + "²" );
        op=0;
    }//GEN-LAST:event_sqrActionPerformed
    private void sqrtActionPerformed(java.awt.event.ActionEvent evt) {                                     
        inb=Double.parseDouble(String.valueOf(display2.getText()));
        out=Math.sqrt(inb);
        display2.setText(String.valueOf(out));
        display1.setText(  "√" +String.valueOf(inb));
        op=0;
    } 
    private void cube1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cube1ActionPerformed
       inb=Double.parseDouble(String.valueOf(display2.getText()));
        out=inb*inb*inb ;
        display2.setText(String.valueOf(out));
        display1.setText(String.valueOf(inb) + "³" );
        op=0;
    }//GEN-LAST:event_cube1ActionPerformed

    private void cuberootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuberootActionPerformed
       inb=Double.parseDouble(String.valueOf(display2.getText()));
        out=Math.cbrt(inb);
        display2.setText(String.valueOf(out));
        display1.setText(  "³√" +String.valueOf(inb));
        op=0;
    }//GEN-LAST:event_cuberootActionPerformed

    private void fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fActionPerformed

    }//GEN-LAST:event_fActionPerformed

    private void fMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fMouseClicked
       if(!shft)
        { shft=true;}
        else { shft=false;}
    }//GEN-LAST:event_fMouseClicked

    private void degActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degActionPerformed
       dgrrad=false;
    }//GEN-LAST:event_degActionPerformed

    private void radActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radActionPerformed
        dgrrad=true; 
    }//GEN-LAST:event_radActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
       if (op==0 ){
           ina=Double.parseDouble(String.valueOf(display2.getText()));
       }
       else {
           inb=Double.parseDouble(String.valueOf(display2.getText()));
       }
       if( op ==1){
           ina=ina+inb;
       }
       if( op ==2){
           ina=ina-inb;
       }
       if( op ==3){
           ina=ina*inb;
       }
       if( op ==4){
           ina=ina/inb;
       }
       if( op ==5){
           ina=ina*inb/100;
       }
       //display2.setText("0");
       //display1.setText(String.valueOf(ina+"+"+inb));
       display2.setText("0");
       display1.setText(String.valueOf(ina+"+"));
       
       op=1;
       
       decdisp=false;
       zerodisp=false;
    }//GEN-LAST:event_plusActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        if (op==0 ){
           ina=Double.parseDouble(String.valueOf(display2.getText()));
       }
       else {
           inb=Double.parseDouble(String.valueOf(display2.getText()));
       }
       if( op ==1){
           ina=ina+inb;
       }
       if( op ==2){
           ina=ina-inb;
       }
       if( op ==3){
           ina=ina*inb;
       }
       if( op ==4){
           ina=ina/inb;
       }
       if( op ==5){
           ina=ina*inb/100;
       }
      
       display1.setText(String.valueOf(ina+ "-"));
       display2.setText("0");
       op=2;
       
       decdisp=false;
       zerodisp=false;
    }//GEN-LAST:event_minusActionPerformed

    private void mulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulActionPerformed
        if (op==0 ){
           ina=Double.parseDouble(String.valueOf(display2.getText()));
       }
       else {
           inb=Double.parseDouble(String.valueOf(display2.getText()));
       }
       if( op ==1){
           ina=ina+inb;
       }
       if( op ==2){
           ina=ina-inb;
       }
       if( op ==3){
           ina=ina*inb;
       }
       if( op ==4){
           ina=ina/inb;
       }
       if( op ==5){
           ina=ina*inb/100;
       }
       
       display1.setText(String.valueOf(ina+"×"));
       display2.setText("0");
       op=3;
       
       decdisp=false;
       zerodisp=false;
    }//GEN-LAST:event_mulActionPerformed

    private void divActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divActionPerformed
        if (op==0 ){
           ina=Double.parseDouble(String.valueOf(display2.getText()));
       }
       else {
           inb=Double.parseDouble(String.valueOf(display2.getText()));
       }
       if( op ==1){
           ina=ina+inb;
       }
       if( op ==2){
           ina=ina-inb;
       }
       if( op ==3){
           ina=ina*inb;
       }
       if( op ==4){
           ina=ina/inb;
       }
       if( op ==5){
           ina=ina*inb/100;
       }
       
       display1.setText(String.valueOf(ina+"÷"));
       display2.setText("0");
       op=4;
       
       decdisp=false;
       zerodisp=false;
    }//GEN-LAST:event_divActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
        inb=Double.parseDouble(String.valueOf(display2.getText()));
        if(op== 0){
            out=inb;
            display1.setText(String.valueOf(inb));
        }
        if(op== 1){
            out=ina+inb;
            display2.setText(display2.getText() + String.valueOf(inb));
        }
        if(op== 2){
            out=ina-inb;
            display2.setText(display2.getText() + String.valueOf(inb));
        }
        if(op== 3){
            out=ina*inb;
            display2.setText(display2.getText() + String.valueOf(inb));
        }
        if(op== 4){
            out=ina/inb;
            display2.setText(display2.getText() + String.valueOf(inb));
        }
        if(op== 5){
            out=ina*inb/100;
            
            display2.setText(display2.getText() + String.valueOf(inb)+")");
        }
        if(out> -100000000 && out< 100000000){
            display2.setText(String.valueOf(out));
        }
        else{
            display2.setText("Error");
        }
        
        ina=0;
        inb=0;
        out=0;
        
        op=0;
        decdisp=false;
        zerodisp=false;
        
    }//GEN-LAST:event_equalActionPerformed

    private void percentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentActionPerformed
        ina=Double.parseDouble(String.valueOf(display2.getText()));
        
        display2.setText("0");
        display1.setText(String.valueOf(ina) +"%(" );
        
        decdisp=false;
        zerodisp=false;
        op=5;
    }//GEN-LAST:event_percentActionPerformed

    private void expActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expActionPerformed
 if (!zerodisp && !decdisp)
        {  display2.setText(null);}
        display1.setText("e");
        display2.setText(display2.getText() + "2.718281828");
        zerodisp= true;        // TODO add your handling code here:
    }//GEN-LAST:event_expActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calc007.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calc007.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calc007.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calc007.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calc007().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cos;
    private javax.swing.JButton cube1;
    private javax.swing.JButton cuberoot;
    private javax.swing.JRadioButton deg;
    private javax.swing.JButton del;
    private javax.swing.JTextField display1;
    private javax.swing.JTextField display2;
    private javax.swing.JButton div;
    private javax.swing.JButton eight;
    private javax.swing.JButton equal;
    private javax.swing.JButton exp;
    private javax.swing.JButton f;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton minus;
    private javax.swing.JButton mul;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton onebx;
    private javax.swing.JButton percent;
    private javax.swing.JButton pi;
    private javax.swing.JButton plus;
    private javax.swing.JButton point;
    private javax.swing.JRadioButton rad;
    private javax.swing.JButton reset;
    private javax.swing.JButton seven;
    private javax.swing.JButton sin;
    private javax.swing.JButton six;
    private javax.swing.JButton sqr;
    private javax.swing.JButton sqrt;
    private javax.swing.JButton tan;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
//                         © Sifat Ahmad 2015
